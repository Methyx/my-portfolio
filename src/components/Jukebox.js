/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: SamTheCaribbean (https://sketchfab.com/SamTheCaribbean)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/jukebox-f93f606c43f8454fa428b6c365ac789b
title: Jukebox
*/
import { Canvas } from "@react-three/fiber";
import { OrbitControls } from "@react-three/drei";
import { Suspense } from "react";

import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { useRef } from "react";

const JukeboxModel = (props) => {
  const { nodes, materials } = useGLTF("/jukebox.gltf");
  const object = useRef(null);
  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    object.current.rotation.set(
      0.1 + Math.cos(t / 4.5) / 5,
      Math.sin(t / 4) / 2 - Math.PI / 2,
      0.3 - (1 + Math.sin(t / 4)) / 4
    );
    object.current.position.y = (1 + Math.sin(t / 2)) / 15 - 0.85;
  });
  return (
    <group {...props} dispose={null} ref={object}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Object_2.geometry} material={materials.GLASS} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.red1} />
        <mesh geometry={nodes.Object_4.geometry} material={materials.red2} />
        <mesh geometry={nodes.Object_5.geometry} material={materials.red2} />
      </group>
    </group>
  );
};

useGLTF.preload("/jukebox.gltf");

const Jukebox = () => {
  return (
    <Canvas camera={{ position: [-10, 10, 40], fov: 5 }}>
      <ambientLight intensity={0.8} />
      <directionalLight
        position={[-2, 10, 2]}
        intensity={1}
        castShadow
        shadow-mapSize={[1024, 1024]}
      />
      <OrbitControls enableZoom={false} />
      <Suspense fallback={null}>
        <JukeboxModel position={[0, -0.8, 0]} rotation={[0, -Math.PI / 2, 0]} />
      </Suspense>
    </Canvas>
  );
};

export default Jukebox;
